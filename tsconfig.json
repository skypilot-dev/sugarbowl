// TSConfig for monorepo root
// Adapted from https://blog.logrocket.com/setting-up-monorepo-with-lerna-typescript/
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "compilerOptions": {
    "allowJs": false,
    // Report an error for unreachable code instead of just a warning.
    "allowUnreachableCode": false,
    // Report an error for unused labels instead of just a warning.
    "allowUnusedLabels": false,
    // "alwaysStrict": true, // implied by "strict"
    "baseUrl": ".",
    "declaration": true,
    "emitDecoratorMetadata": true,
    // Support importation of CJS modules in ESM.
    "esModuleInterop": true,
    // Report an error when the value `undefined` is given to an optional property that doesn't specify `undefined` as a valid value.
    "exactOptionalPropertyTypes": false,
    "experimentalDecorators": true,
    // Report an error when importing a file using a casing different from the casing on disk.
    "forceConsistentCasingInFileNames": true,
    // Enable stricter transpilation for better output.
    "isolatedModules": true,
    "lib": [
      "ES2023",
    ],
    "module": "NodeNext",
    // Treat every file as a module, even if it doesn't have an import or export statement.
    "moduleDetection": "force",
    // Enable node-style module resolution for things like NPM package imports.
    "moduleResolution": "NodeNext",
    "noEmit": true,
    // Report errors for fallthrough cases in switch statements.
    "noFallthroughCasesInSwitch": true,
    // "noImplicitAny": true,                // implied by "strict"
    // Force functions designed to override their parent class to be specified as `override`.
    "noImplicitOverride": true,
    // Force functions to specify that they can return `undefined` if a possible code path does not return a value.
    "noImplicitReturns": true,
    // "noImplicitThis": true,               // implied by "strict"
    // Consider enabling this; see https://www.typescriptlang.org/tsconfig#noPropertyAccessFromIndexSignature
    // "noPropertyAccessFromIndexSignature": true,
    "noLib": false,
    // Force the usage of the indexed syntax to access fields declared using an index signature.
    "noUncheckedIndexedAccess": true,
    // Report an error when a variable is declared but never used.
    "noUnusedLocals": true,
    "paths": {
      "~/*": ["./*"],
    },
    "removeComments": true,

    // Enable JSON imports.
    "resolveJsonModule": true,
    // Don't typecheck libraries and declaration (.d.ts) files
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    // "strictBindCallApply": true,          // implied by "strict"
    // "strictFunctionTypes": true,          // implied by "strict"
    // "strictNullChecks": true,             // implied by "strict"
    // "strictPropertyInitialization": true, // implied by "strict"

    // Enable top-level `await` and other modern ESM features.
    "target": "ES2022",
    // "useDefineForClassFields": true, // implied by target >= ES2022 (including ESNext)
  },
  "exclude": [
    "node_modules",
  ],
  "include": [
    // This file covers only the monorepo root. Packages have their own tsconfig.json files that extend this one.
    "config/",
    "scripts/",
    "src",
    "*.ts",
  ],
}
